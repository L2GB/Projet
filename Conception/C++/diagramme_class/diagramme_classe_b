@startuml

hide circle

class Transmitter
class Object
class ObjectManager
class PowerPlug
class Heater
class Thermostat
class OCC
class ZWaveController
class BDCC
class RACC
class Socket

abstract class DataObserver
abstract class DataObservable

abstract class Object{
	void run()
	abstract readFile()
	abstract writeFile()
}

class ObjectManager{
	void stop()
}

class Heater{
	readFile()
}	

class Thermostat{
	readFile()
}

class PowerPlug{
	readFile()
}

class RACC{
	void receiveOrder(string _dataReceive, IdClient _idClient)
}

class Transmitter{
	void executeOrder(string _order, json_t *data, IdClient _idClient)
}

abstract class Request{
	{static} Type getType(string _type)
}

abstract class Communicator{
	void attach(Transmission *_transmission)
}

abstract class Transmission{
	{abstract} void executeOrder(string _order, json_t *data, IdClient _idClient)
}

Transmitter -down-|> Transmission
Communicator -up-> Transmission
Transmitter <-down-ObjectManager
Transmitter -up-> Request
Request -right-> ObjectManager
ObjectManager -right->OCC
OCC-right->ZWaveController
ObjectManager-up->Object

Object-up-|>Heater
Object-up-|>PowerPlug
Object-up-|>Thermostat

Transmitter-left->BDCC
BDCC--|>Communicator

Transmitter-right->RACC
RACC--|>DataObserver
RACC-->Socket
Socket--|>DataObservable
DataObservable-right->DataObserver
RACC--|>Communicator

@enduml

